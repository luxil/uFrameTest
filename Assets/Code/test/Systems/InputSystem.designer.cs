// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace test {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using test;
    using uFrame.ECS.APIs;
    using uFrame.ECS.Components;
    using uFrame.ECS.Systems;
    using uFrame.Kernel;
    using UniRx;
    using UnityEngine;
    
    
    public partial class InputSystemBase : uFrame.ECS.Systems.EcsSystem, uFrame.ECS.APIs.ISystemUpdate {
        
        private IEcsComponentManagerOf<MenuComponent> _MenuComponentManager;
        
        private IEcsComponentManagerOf<Health> _HealthManager;
        
        private InputSystemUpdateHandler InputSystemUpdateHandlerInstance = new InputSystemUpdateHandler();
        
        private InputSystemOnMouseDownHandler InputSystemOnMouseDownHandlerInstance = new InputSystemOnMouseDownHandler();
        
        public IEcsComponentManagerOf<MenuComponent> MenuComponentManager {
            get {
                return _MenuComponentManager;
            }
            set {
                _MenuComponentManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Health> HealthManager {
            get {
                return _HealthManager;
            }
            set {
                _HealthManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            MenuComponentManager = ComponentSystem.RegisterComponent<MenuComponent>(3);
            HealthManager = ComponentSystem.RegisterComponent<Health>(1);
            this.OnEvent<uFrame.ECS.UnityUtilities.MouseDownDispatcher>().Subscribe(_=>{ InputSystemOnMouseDownFilter(_); }).DisposeWith(this);
        }
        
        protected virtual void InputSystemUpdateHandler() {
            var handler = InputSystemUpdateHandlerInstance;
            handler.System = this;
            handler.Execute();
        }
        
        protected void InputSystemUpdateFilter() {
            this.InputSystemUpdateHandler();
        }
        
        public virtual void SystemUpdate() {
            InputSystemUpdateFilter();
        }
        
        protected virtual void InputSystemOnMouseDownHandler(uFrame.ECS.UnityUtilities.MouseDownDispatcher data, Health source) {
            var handler = InputSystemOnMouseDownHandlerInstance;
            handler.System = this;
            handler.Event = data;
            handler.Source = source;
            handler.Execute();
        }
        
        protected void InputSystemOnMouseDownFilter(uFrame.ECS.UnityUtilities.MouseDownDispatcher data) {
            var SourceHealth = HealthManager[data.EntityId];
            if (SourceHealth == null) {
                return;
            }
            if (!SourceHealth.Enabled) {
                return;
            }
            this.InputSystemOnMouseDownHandler(data, SourceHealth);
        }
    }
    
    [uFrame.Attributes.uFrameIdentifier("2667ea79-0597-4e9c-8973-88b2b0298978")]
    public partial class InputSystem : InputSystemBase {
        
        private static InputSystem _Instance;
        
        public InputSystem() {
            Instance = this;
        }
        
        public static InputSystem Instance {
            get {
                return _Instance;
            }
            set {
                _Instance = value;
            }
        }
    }
}
